{"version":3,"sources":["store/reducer/Bookables/types.ts","store/reducer/Bookables/BookableActions.ts","features/Bookables/BookableNextButton.tsx","features/Bookables/BookablesList.tsx","features/Bookables/BookablesListContainer.tsx","features/Bookables/BookablePage.tsx","features/WeekPicker/WeekPicker.tsx","features/Bookings/BookingsPage.tsx","features/Users/UsersPage.tsx","store/reducer/Bookables/initialState.ts","store/reducer/rootReducer.ts","store/reducer/Bookables/reducer.ts","store/sagas/rootSaga.ts","configureStore.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BookableActionType","BookableNextButton","props","nextBookable","className","onClick","autoFocus","BookablesList","setGroup","group","bookableIndex","bookables","setBookable","setToggleDetails","hasDetails","groups","Set","map","b","bookablesInGroup","filter","bookable","undefined","value","onChange","e","target","g","i","selectedIndex","console","log","title","id","type","checked","notes","days","sort","d","sessions","s","connect","state","ownProps","boookable","dipatch","payload","action","SET_GROUP","SET_BOOKABLE","TOGGLE_HAS_DETAILS","BookablePage","BookablesListContainer","WeekPicker","week","changeDate","date","start","toDateString","end","BookingsPage","Date","UsersPage","bookableInitialState","rootReducer","combineReducers","rootSaga","all","store","extrastoreEnhancers","sagaMiddleWare","createSagaMiddleware","middleWare","applyMiddleware","storeEnhancer","createStore","composeWithDevTools","run","configureStore","App","menus","linkTo","iconType","linkText","getIcons","menu","to","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d122429.chunk.js","sourcesContent":["export enum BookableActionType {\r\n    SET_BOOKABLE = '@Bookable/SET_BOOKABLE',\r\n    SET_GROUP = '@Bookable/SET_GROUP',\r\n    TOGGLE_HAS_DETAILS = '@Bookable/TOGGLE_HAS_DETAILS',\r\n    NEXT_BOOKABLE = '@Bookable/NEXT_BOOKABLE',\r\n}","//import { createAction } from 'redux-actions';\r\nimport { action } from 'typesafe-actions';\r\nimport { ISetBookablePayload } from '../../../interfaces/ISetBookablePayload';\r\nimport { ISetGroupPayload } from '../../../interfaces/ISetGroupPayload';\r\nimport { BookableActionType } from './types';\r\n\r\nexport const setBookable = (payload: ISetBookablePayload) => action(BookableActionType.SET_BOOKABLE, payload);\r\nexport const setGroup = (payload: ISetGroupPayload) => action(BookableActionType.SET_GROUP, payload);\r\nexport const setToggleDetails = () => action(BookableActionType.TOGGLE_HAS_DETAILS);\r\n\r\nexport type BookableActions = ReturnType<typeof setBookable> | ReturnType<typeof setGroup> | ReturnType<typeof setToggleDetails>;","import React, { FC } from 'react'\r\nimport { FaArrowRight } from 'react-icons/fa'\r\nexport interface IBookableNextButton {\r\n    nextBookable(): void\r\n}\r\nconst BookableNextButton: FC<IBookableNextButton> = (props) => {\r\n    const { nextBookable } = props;\r\n    return (\r\n        <p>\r\n            <button className=\"btn\" onClick={nextBookable} autoFocus>\r\n                <FaArrowRight />\r\n                <span>Next</span>\r\n            </button>\r\n        </p>\r\n    )\r\n}\r\nexport default BookableNextButton","import React, { FC, useState } from 'react'\r\nimport { bookables, sessions, days } from '../../assets/static.json'\r\nimport { IBookablesListProps } from '../../interfaces/IBookablesList';\r\nimport BookableNextButton from './BookableNextButton';\r\nconst BookablesList: FC<IBookablesListProps> = (props) => {\r\n    const { setGroup, group, bookableIndex, bookables, setBookable, setToggleDetails, hasDetails } = props;\r\n    //const [hasDetails, setHasDetails] = useState(false);\r\n    const groups = [...new Set(bookables?.map(b => b.group))];\r\n    const bookablesInGroup = bookables?.filter(b => b.group === group);\r\n    const bookable = bookablesInGroup ? bookablesInGroup[bookableIndex!] : undefined;\r\n    const changeBookable = (selectedIndex: number) => {\r\n        setBookable?.({ bookableIndex: selectedIndex });\r\n        console.log(bookableIndex);\r\n    }\r\n    const changeGroup = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        setGroup?.({ group: e.target.value, bookableIndex: 0 });\r\n    }\r\n    const nextBookable = () => {\r\n        //setBookableIndex(i => (i + 1) % bookablesInGroup.length);\r\n        //setBookable(i => (i + 1) % bookablesInGroup.length)\r\n    }\r\n    const toggleDetails = () => {\r\n        setToggleDetails?.();\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div>\r\n                <select value={group} onChange={changeGroup}>\r\n                    {groups && groups.map(g => <option value={g} key={g}>{g}</option>)}\r\n                </select>\r\n                <ul className=\"bookables items-list-nav\">\r\n                    {bookablesInGroup && bookablesInGroup.map((b, i) => (\r\n                        <li key={b.id} className={i === bookableIndex ? \"selected\" : ''} onClick={() => changeBookable(i)}>\r\n                            <button className=\"btn\">{b.title}</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <BookableNextButton nextBookable={nextBookable}></BookableNextButton>\r\n            </div>\r\n            {bookable && (\r\n                <div className=\"bookable-detail\">\r\n                    <div className=\"item\">\r\n                        {/* <!-- item header --> */}\r\n                        <div className=\"item-header\">\r\n                            <h2>{bookable.title}</h2>\r\n                            <span className=\"controls\">\r\n                                <label>\r\n                                    <input type=\"checkbox\" checked={hasDetails} onChange={toggleDetails} />\r\n                                    Show Details\r\n                                </label>\r\n                            </span>\r\n                        </div>\r\n                        {/* <!--end item header --> */}\r\n                        <p>{bookable.notes}</p>\r\n                        {hasDetails && (\r\n                            //   <!-- item avilability --> \r\n                            <div className=\"item-details\">\r\n                                <h3>Availability</h3>\r\n                                <div className=\"bookable-availability\">\r\n                                    <ul>\r\n                                        {bookable?.days.sort().map(d => <li key={d}>{days[d]}</li>)}\r\n                                    </ul>\r\n                                    <ul>\r\n                                        {bookable?.sessions.map(s => <li key={s}>{sessions[s]}</li>)}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            // <!-- enditem avilability --> \r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\nexport default BookablesList;\r\n\r\n","\r\nimport { connect } from \"react-redux\";\r\nimport { AnyAction, Dispatch } from \"redux\";\r\nimport { IApplicationState } from \"../../interfaces/IApplicationState\";\r\nimport { IBookablesListDispatchFromProps, IBookablesListProps, IBookablesListStateFromProps } from \"../../interfaces/IBookablesList\";\r\nimport { ISetBookablePayload } from \"../../interfaces/ISetBookablePayload\";\r\n//import { IBookableState } from \"../../interfaces/IBookableState\";\r\nimport { ISetGroupPayload } from \"../../interfaces/ISetGroupPayload\";\r\nimport { setBookable, setGroup, setToggleDetails } from \"../../store/reducer/Bookables/BookableActions\";\r\nimport BookablesList from \"./BookablesList\";\r\n\r\nconst mapStateProps = (state: IApplicationState, ownProps: IBookablesListProps): IBookablesListStateFromProps => ({\r\n    group: state.boookable.group,\r\n    bookableIndex: state.boookable.bookableIndex,\r\n    bookables: state.boookable.bookables,\r\n    hasDetails: state.boookable.hasDetails\r\n})\r\n\r\nconst mapDispatchToProps = (dipatch: Dispatch<AnyAction>): IBookablesListDispatchFromProps => ({\r\n    setGroup: (payload: ISetGroupPayload) => dipatch(setGroup(payload)),\r\n    setBookable: (payload: ISetBookablePayload) => dipatch(setBookable(payload)),\r\n    setToggleDetails: () => dipatch(setToggleDetails())\r\n})\r\n\r\nexport default connect(mapStateProps, mapDispatchToProps)(BookablesList);","import React, { FC } from 'react'\r\nimport { IBookablePage } from '../../interfaces/IBookablePage';\r\nimport BookablesListContainer from './BookablesListContainer';\r\n\r\nconst BookablePage: FC<IBookablePage> = (props) => {\r\n    return (\r\n        <main className=\"bookables-page\">\r\n            <BookablesListContainer></BookablesListContainer>\r\n        </main>\r\n    );\r\n}\r\nexport default BookablePage;","import { FC } from \"react\";\r\nimport { FaCalendarDay, FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\n\r\nexport interface IWeek {\r\n    start: Date,\r\n    end: Date\r\n}\r\nexport interface IWeekPicker {\r\n    week?: IWeek\r\n    date: Date\r\n}\r\nexport const WeekPicker: FC<IWeekPicker> = (props) => {\r\n    const { week, date } = props;\r\n    const changeDate = () => {\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <p className=\"date-picker\">\r\n                <button className=\"btn\" onClick={changeDate}>\r\n                    <FaChevronLeft />\r\n                    <span>Prev</span>\r\n                </button>\r\n                <button className=\"btn\" onClick={changeDate}>\r\n                    <FaCalendarDay />\r\n                    <span>Today</span>\r\n                </button>\r\n                <button className=\"btn\" onClick={changeDate}>\r\n                    <FaChevronRight />\r\n                    <span>Next</span>\r\n                </button>\r\n            </p>\r\n            <p>{week?.start.toDateString()}- {week?.end.toDateString()}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { WeekPicker } from '../WeekPicker/WeekPicker';\r\n\r\nconst BookingsPage = () => {\r\n    return (\r\n        <main className=\"bookings-page\">\r\n            <p>Bookings!</p>\r\n            <WeekPicker date={new Date()} />\r\n        </main>\r\n    )\r\n}\r\nexport default BookingsPage;","import React from 'react'\r\nconst UsersPage = () => {\r\n    return (\r\n        <main className=\"users-page\">\r\n            <p>Users!</p>\r\n        </main>\r\n    )\r\n}\r\nexport default UsersPage;","import { IBookableState } from \"../../../interfaces/IBookableState\";\r\nimport { bookables, sessions, days } from \"../../../assets/static.json\";\r\nexport const bookableInitialState: IBookableState = {\r\n    group: 'Kit',\r\n    bookableIndex: 0,\r\n    hasDetails: true,\r\n    bookables: bookables\r\n}","import { combineReducers } from \"redux\";\r\nimport { IApplicationState } from \"../../interfaces/IApplicationState\";\r\nimport { bookableReducer } from \"./Bookables/reducer\";\r\n\r\nconst rootReducer = combineReducers<IApplicationState>({\r\n    boookable: bookableReducer\r\n});\r\nexport default rootReducer;","import { IBookableState } from './../../../interfaces/IBookableState';\r\nimport { Reducer } from \"redux\";\r\nimport { BookableActionType } from \"./types\";\r\nimport { bookableInitialState } from './initialState';\r\nimport { BookableActions } from './BookableActions';\r\n\r\n\r\n\r\nexport const bookableReducer: Reducer<IBookableState, BookableActions> = (state = bookableInitialState, action) => {\r\n    switch (action.type) {\r\n        case BookableActionType.SET_BOOKABLE: {\r\n            return {\r\n                ...state,\r\n                bookableIndex: action.payload.bookableIndex\r\n            }\r\n        }\r\n        case BookableActionType.SET_GROUP: {\r\n            return {\r\n                ...state,\r\n                group: action.payload.group,\r\n                bookableIndex: 0\r\n            }\r\n        }\r\n        case BookableActionType.TOGGLE_HAS_DETAILS: {\r\n            return {\r\n                ...state,\r\n                hasDetails: !state.hasDetails\r\n            }\r\n        }\r\n        // case BookableActionType.NEXT_BOOKABLE:{\r\n\r\n        // }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import { all } from 'redux-saga/effects'\r\n\r\nfunction* rootSaga() {\r\n    yield all([\r\n        //add all your saga here\r\n    ]);\r\n}\r\n\r\nexport default rootSaga;","import { applyMiddleware, Store, StoreEnhancer, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { IApplicationState } from \"./interfaces/IApplicationState\";\r\nimport rootReducer from \"./store/reducer/rootReducer\";\r\nimport rootSaga from \"./store/sagas/rootSaga\";\r\n\r\nexport default function configureStore(extrastoreEnhancers: StoreEnhancer[] = []): Store<IApplicationState> {\r\n    const sagaMiddleWare = createSagaMiddleware();\r\n    const middleWare = applyMiddleware(sagaMiddleWare);\r\n    const storeEnhancer = [middleWare, ...extrastoreEnhancers];\r\n    const store = createStore(rootReducer, composeWithDevTools(...storeEnhancer));\r\n\r\n    sagaMiddleWare.run(rootSaga)\r\n    return store;\r\n}\r\nexport const store = configureStore();\r\n","import React, { FC } from 'react';\nimport './App.css';\nimport { IApp } from './interfaces/IApp';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Routes\n} from \"react-router-dom\";\nimport { FaCalendarAlt, FaDoorOpen, FaUsers } from \"react-icons/fa\";\nimport BookablesPage from './features/Bookables/BookablePage'\nimport BookingsPage from './features/Bookings/BookingsPage';\nimport UsersPage from './features/Users/UsersPage';\nimport { IMenu, Menus } from './interfaces/IMenu';\nimport { Provider } from 'react-redux';\nimport { store } from './configureStore';\nconst App: FC<IApp> = (props) => {\n  const menus: Menus = [\n    {\n      linkTo: '/bookings',\n      className: 'btn btn-header',\n      iconType: 'FaCalendarAlt',\n      linkText: 'Bookings'\n    },\n    {\n      linkTo: '/bookables',\n      className: 'btn btn-header',\n      iconType: 'FaDoorOpen',\n      linkText: 'Bookables'\n    },\n    {\n      linkTo: '/users',\n      className: 'btn btn-header',\n      iconType: 'FaUsers',\n      linkText: 'Users'\n    }\n  ]\n  const getIcons = (iconType: string) => {\n    switch (iconType) {\n      case 'FaCalendarAlt':\n        return <FaCalendarAlt />\n      case 'FaDoorOpen':\n        return <FaDoorOpen />\n      case 'FaUsers':\n        return <FaUsers />\n\n    }\n  }\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <header>\n            <nav>\n              <ul>\n                {menus && menus.map((menu: IMenu) => {\n                  const { linkTo, linkText, iconType, className } = menu;\n                  return (\n                    <li>\n                      <Link to={linkTo} className={className}>\n                        {getIcons(iconType)}\n                        <span>{linkText}</span>\n                      </Link>\n                    </li>\n                  )\n                })}\n              </ul>\n            </nav>\n          </header>\n          <Routes>\n            <Route path=\"/bookings\" element={<BookingsPage />} />\n            <Route path=\"/bookables\" element={<BookablesPage />} />\n            <Route path=\"/users\" element={<UsersPage />} />\n          </Routes>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}